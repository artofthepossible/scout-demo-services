apiVersion: v1
data:
  .dockerignore: node_modules
  .eslintrc: |
    {
      "extends": "airbnb-base",
      "env": {
        "node": true,
        "mocha": true,
        "es6": true
      },
      "plugins": ["chai-friendly"],
      "rules": {
        "comma-dangle": 0,
        "consistent-return": 0,
        "function-paren-newline": ["error", "never"],
        "implicit-arrow-linebreak": ["off"],
        "no-param-reassign": 0,
        "no-underscore-dangle": 0,
        "no-shadow": 0,
        "no-console": 0,
        "no-plusplus": 0,
        "no-unused-expressions": 0,
        "no-unused-vars": ["error", { "argsIgnorePattern": "next" }],
        "chai-friendly/no-unused-expressions": 2
      }
    }
  .gitattributes: |
    legal/THIRD_PARTY.md linguist-generated=true
  .gitignore: |
    lib-cov
    *.seed
    *.log
    *.csv
    *.dat
    *.out
    *.pid
    *.gz
    *.swp

    pids
    logs
    results
    tmp

    # Optional npm cache directory
    .npm

    #Build
    public/css/main.css
    .nyc_output/*

    # API keys and secrets
    .env

    # Dependency directory
    node_modules
    bower_components

    package-lock.json

    # Editors
    .idea
    .vscode
    *.iml
    modules.xml
    *.ipr

    # Folder config file
    Desktop.ini

    # Recycle Bin used on file shares
    $RECYCLE.BIN/

    # OS metadata
    .DS_Store
    Thumbs.db
    .DocumentRevisions-V100
    .fseventsd
    .Spotlight-V100
    .TemporaryItems
    .Trashes
    .VolumeIcon.icns
    .com.apple.timemachine.donotpresent
  Dockerfile: "FROM alpine:3.14@sha256:eb3e4e175ba6d212ba1d6e04fc0782916c08e1c9d7b45892e9796141b1d379ae\n\n#better image\n#FROM node:slim\n\nENV BLUEBIRD_WARNINGS=0 \\\n  NODE_ENV=production \\\n  NODE_NO_WARNINGS=1 \\\n  NPM_CONFIG_LOGLEVEL=warn \\\n  SUPPRESS_NO_CONFIG_WARNING=true\n\nRUN apk add --no-cache \\\n  nodejs\n\nCOPY package.json ./\n\nRUN  apk add --no-cache npm \\\n && npm i --no-optional \\\n && npm cache clean --force \\\n && apk del npm\n \nCOPY . /app\n\nCMD [\"node\",\"/app/app.js\"]\n\nEXPOSE 3000\n"
  README.md: "# Docker Scout demo service\n\nA repository containing an application and Dockerfile to demonstrate the use of Docker Scout to analyze and remediate CVEs in a container image.\n\nRead the [Docker Scout Quickstart](https://docs.docker.com/scout/quickstart) for a full walkthrough. You can build and run the image with the following command:\n\n```shell\ndocker build -t scout-demo:v1 .\ndocker run scout-demo:v1\n```\n\nThe application consists of a basic ExpressJS server and uses an intentionally old version of Express and Alpine base image.\n \n \n"
  app.js: |
    const express = require('express');

    const app = express();
    const port = 3000;

    app.get('/', (req, res) => {
      res.send('Hello World!');
    });

    app.listen(port, () => {
      console.log(`Example app listening on port ${port}`);
    });
  compose.yaml: |
    version: '3.8'

    services:
      app:
        image: node:14
        working_dir: /usr/src/app
        volumes:
          - ./:/usr/src/app
        command: node app.js
        ports:
          - "3000:3000"
        environment:
          - NODE_ENV=development
  package.json: |
    {
      "name": "@docker/scout-demo-service",
      "version": "0.1.0",
      "description": "A boilerplate for Node.js web applications",
      "repository": {
        "type": "git",
        "url": "https://github.com/docker/scout-demo-servixe.git"
      },
      "license": "Apache-2",
      "scripts": {
        "start": "node app.js",
        "test": "nyc mocha --timeout=10000 --exit",
        "lint": "eslint \"**/*.js\""
      },
      "dependencies": {
        "express": "4.17.1"
      },
      "devDependencies": {
        "chai": "^4.2.0",
        "eslint": "^7.17.0",
        "eslint-config-airbnb-base": "^14.2.1",
        "eslint-plugin-chai-friendly": "^0.6.0",
        "eslint-plugin-import": "^2.22.1",
        "mocha": "^8.2.1",
        "nyc": "^15.1.0",
        "sinon": "^9.2.3",
        "supertest": "^6.0.1"
      },
      "engines": {
        "node": ">=10.23.1",
        "npm": ">=6.14.10"
      }
    }
  scout-demo-services.yaml: ""
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: app
  name: app-cm0
